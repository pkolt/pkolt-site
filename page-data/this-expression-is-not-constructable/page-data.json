{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/this-expression-is-not-constructable/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"–û—à–∏–±–∫–∞ TypeScript \\\"This expression is not constructable\\\"\",\n  \"emoji\": \"ü§î\",\n  \"tags\": [\"TypeScript\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u0418\\u043D\\u043E\\u0433\\u0434\\u0430 \\u0432 TypeScript \\u043C\\u043E\\u0436\\u043D\\u043E \\u0441\\u043B\\u043E\\u0432\\u0438\\u0442\\u044C \\u043E\\u0448\\u0438\\u0431\\u043A\\u0443 \\\"This expression is not constructable\\\", \\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440:\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-typescript\",\n    \"parentName\": \"pre\"\n  }, \"class Foo {}\\n\\nfunction factory<T>(cls: T): T {\\n    return new cls(); // This expression is not constructable.\\n}\\n\\nconst foo = factory(Foo);\\n\")), mdx(\"p\", null, \"\\u0421\\u043C\\u044B\\u0441\\u043B \\u044D\\u0442\\u043E\\u0439 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0438 \\u0432 \\u0442\\u043E\\u043C \\u0447\\u0442\\u043E TypeScript \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0440\\u0430\\u0441\\u043F\\u043E\\u0437\\u043D\\u0430\\u0442\\u044C, \\u0447\\u0442\\u043E \\u043C\\u044B \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u0435\\u043C \\u0432 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0435 \\u0430\\u0440\\u0433\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u044E-\\u043A\\u043E\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u043E\\u0440.\\n\\u041C\\u043E\\u0436\\u043D\\u043E \\u044F\\u0432\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C, \\u0447\\u0442\\u043E \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u0432\\u0430\\u0435\\u043C\\u043E\\u0435 \\u043D\\u0430\\u043C\\u0438 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u044F\\u0432\\u043B\\u044F\\u0435\\u0442\\u0441\\u044F \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0435\\u0439-\\u043A\\u043E\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u043E\\u0440\\u043E\\u043C.\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-typescript\",\n    \"parentName\": \"pre\"\n  }, \"class Foo {}\\n\\ntype Constructable<T = any> = new (...args: any[]) => T;\\n\\nfunction factory<T>(cls: Constructable<T>): T {\\n    return new cls();\\n}\\n\\nconst foo = factory(Foo);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"–û—à–∏–±–∫–∞ TypeScript \"This expression is not constructable\"","tags":["TypeScript"],"emoji":"ü§î","link":null},"fields":{"dateModified":"Aug 08, 2020 8:43 AM","modifiedTimestamp":"2020-08-08T08:43:20.000Z","slug":"/this-expression-is-not-constructable/"},"tableOfContents":{},"parent":{"__typename":"File","relativePath":"this-expression-is-not-constructable.md"}}},"pageContext":{"id":"0d351fe1-95ba-5aa5-bd40-e0e34b9dacd3","previous":null,"next":{"id":"7f3db7da-1992-53c5-b0ca-9af05c13b43c","frontmatter":{"title":"–û–±–∑–æ—Ä Arduino Uno","tags":["Arduino"]},"fields":{"slug":"/overview-arduino-uno/","dateModified":"2020-08-08T08:43:20.000Z"}},"hasUntagged":false,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}